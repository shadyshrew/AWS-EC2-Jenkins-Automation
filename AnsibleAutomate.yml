---
- hosts: localhost
  connection: local
  gather_facts: true
  vars: 
    deployment_name: inst5
    security_name: you_shall_not_pass
    key_name: snarasimha_support
    region_name: us-east-1
  tasks:
    - name: Security group setup
      ec2_group:
        name: "{{security_name}}"
        description: Allow traffic on ports 22 and 80
        region: "{{region_name}}"
        rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
        rules_egress:
              - proto: all
                cidr_ip: 0.0.0.0/0

    - name: Create an EC2 instance named {{deployment_name}}
      #Boto 3 compatible
      ec2_instance:
          name: "{{deployment_name}}"
          region: "{{ region_name }}"
          key_name: "{{key_name}}"
          #vpc_subnet_id: subnet-0fe59510cf0f26363
          instance_type: t2.micro
          security_group: "{{security_name}}"
          #security_group: default
          network:
            assign_public_ip: true
          #image_id: ami-0c6b1d09930fac512
          #RedHat Linux 8
          image_id: ami-0756fbca465a59a30
          #image_id: ami-098bb5d92c8886ca1
          tags:
            Owner: snarasimha

    - name: Gather EC2 Facts
      ec2_instance_facts:
        filters:
          "tag:Name": "{{deployment_name}}"
      register: ec2_out

    - name: Show outs
      debug: ec2_out
      debug: msg="{{ ec2_out.instances[0].public_ip_address }}"
      debug: msg="{{ ec2_out.instances[0].public_dns_name }}"
      debug: msg=~/.ssh/{{key_name}}.pem

    - name: Add instance to host group
      add_host:
        #hostname: "{{ ec2_out.instances[0].public_dns_name }}"
        #hostname: "{{ec2_out.instances[0].public_dns_name}}"
        hostname: ec2-54-197-135-202.compute-1.amazonaws.com
        #hostname: ec2-34-224-221-180.compute-1.amazonaws.com
        groupname: launched
        ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
        ansible_user: ec2-user
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    
    - name: Wait for SSH
      delegate_to: "{{groups['launched'][0]}}"
      wait_for_connection:
        delay: 10
        timeout: 30

- hosts: "{{groups['launched'][0]}}"
  become: yes
  vars:
    #Vars for jenkins
    version: "java-1.8.0-openjdk"
    #alter: "/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.144-0.b01.el7_4.x86_64/jre/bin/java"
    alter: "/usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java"
    repo_url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
    gpg_key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    options: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
    #repo_url: https://pkg.jenkins-ci.org/redhat/jenkins.repo
    #gpg_key: https://pkg.jenkins-ci.org/redhat/jenkins-ci.key
    #options: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
  tasks:
    - name: Install Java
      yum:
        name: "{{version}}"
        state: present
    
    - name: defaulters
      alternatives:
        name: java
        link: /bin/java
        path: "{{alter}}"
    
    - name: Download the repo
      get_url:
        url: "{{repo_url}}"
        dest: /etc/yum.repos.d/jenkins.repo
      become: true
    
    - name: import key
      rpm_key:
        state: present
        key: "{{gpg_key}}"
      become: true

    - name: install jenkins
      yum:
        name: jenkins
        state: present
      become: true

    - name: java options
      lineinfile:
        dest=/etc/sysconfig/jenkins
        regexp=^JENKINS_JAVA_OPTIONS=
        line=JENKINS_JAVA_OPTIONS="{{options}}"
      become: true
    
    - name: start jenkins on boot
      service:
        name: jenkins
        state: started
      become: true
